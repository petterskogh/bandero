generator client {
  provider = "prisma-client-js"
}
 
datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING") // used for migrations
}

model BandPost {
  id          Int      @id @default(autoincrement())
  email       String
  published   Boolean  @default(false)
  heading     String
  name        String?
  keywords    Keyword[]
  location    String
  body        String
  spotifyLink String?
  soundCloudLink String?
  otherLinks  Link[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model MemberPost {
  id          Int      @id @default(autoincrement())
  email       String
  published   Boolean  @default(false)
  heading     String
  name        String?
  keywords    Keyword[]
  location    String
  body        String
  spotifyLink String?
  soundCloudLink String?
  otherLinks  Link[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Keyword {
  id          Int      @id @default(autoincrement())
  keyword     String   @unique
  bandPosts   BandPost[]
  memberPosts MemberPost[]
}

model Link {
  id          Int      @id @default(autoincrement())
  url         String   
  bandPostId  Int?
  memberPostId Int?
  bandPost    BandPost? @relation(fields: [bandPostId], references: [id])
  memberPost  MemberPost? @relation(fields: [memberPostId], references: [id])
}

